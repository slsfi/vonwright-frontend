// Import scoped CSS variables
@use "../../../../theme/scoped-variables/page-text-variables.scss";

// Import general styles for the secondary toolbar
@use "../../../../theme/common/secondary-toolbar.scss";

// Import general styles for the scroll-content-container class
@use "../../../../theme/common/scroll-content-container.scss";

// Import general styles for the collection-ion-content class
@use "../../../../theme/common/collection-ion-content.scss";

:host {
  --text-column-header-height: 2.75rem;
}

// Overrides to the general collection-ion-content class styles
@media screen and (max-width: 820px) {
  ion-content.collection-ion-content::part(scroll) {
    padding-bottom: 1.25rem;
    padding-top: 1.25rem;
  }
}

// Styles for the columns
.text-columns-container {
  align-content: center;
  display: flex;
  gap: 1.25rem;
  width: 100%;

  .text-column {
    background-color: var(--text-area-background-color, #fafafa);
    color: #222;
    flex: 1 1 auto;
    position: relative;
    max-width: 44.375rem;
    min-width: 31.25rem;
    width: 100%;
    
    .text-column-header {
      align-items: center;
      background: var(--secondary-color);
      color: var(--secondary-color-contrast);
      display: flex;
      font-size: 1rem;
      font-weight: bold;
      height: var(--text-column-header-height);
      padding: 0 2rem 0 1.375rem;
      position: absolute;
      width: 100%;

      @media screen and (max-width: 820px) {
        padding-left: 0.75rem;
      }

      h2 {
        font-size: inherit;
        font-weight: inherit;
        margin: 0;
        overflow: hidden;
        padding: 0;
        text-overflow: ellipsis;
        white-space: nowrap;
        width: 100%;
      }

      span.column-text-title {
        display: contents;
        font-weight: normal;

        &::before {
          content: " â€“ ";
        }
      }
    }

    .text-column-content {
      // border must be height of .text-column-header
      // this makes room for the header at the top of the column
      border-top: var(--text-column-header-height) solid transparent;
      // the actual max-width of columns are set on the .text-column class
      max-width: 100%;
    }

    &.column-type-facsimiles {
      // facsimile columns' width expands to fill up all available space
      max-width: 100%;
  
      .text-column-content {
        overflow-y: hidden;
      }
    }
  }
}

// Styles for the ion-fabs at the top of the columns
ion-fab {
  ion-fab-button {
    --background: var(--fab-button-secondary-background-color);
    --box-shadow: none;
    --color: var(--fab-button-secondary-icon-color);
  }
  ion-fab-button.toggle-fab-list-button {
    --background: var(--fab-button-primary-background-color);
    --color: var(--fab-button-primary-icon-color);
  }
  ion-icon {
    font-size: 1.5rem;
  }
}
ion-fab.column-options {
  right: -0.9375rem;
  top: -1.125rem;
}

// Styles for the narrow column where you can add new columns
.add-view-column {
  align-items: center;
  display: flex;
  flex-direction: column;
  justify-content: flex-start;
  margin-left: -1rem;
  min-width: 4.625rem;
  position: relative;
  visibility: hidden; /* Hides the column by default, set to visible below when preceded by a text-column in the DOM. This prevents the column from flashing to the left in page-text when text-columns have not been loaded yet. */

  @media screen and (max-width: 820px) {
    margin-left: -0.625rem;
    min-width: 3.625rem;
  }

  h2 {
    background: var(--secondary-color);
    color: var(--secondary-color-contrast);
    font-size: 0.9375rem;
    font-weight: bold;
    height: 100%;
    line-height: 2em;
    margin: 0;
    padding-top: 2.625rem;
    text-orientation: upright;
    text-transform: uppercase;
    writing-mode: vertical-rl;
  }

  ion-fab {
    top: -1.125rem;

    ion-fab-button.toggle-fab-list-button ion-icon {
      --ionicon-stroke-width: 48px;
    }
  }
}

.text-column + .add-view-column {
  visibility: visible;
}

.select-view-wrapper {
  align-items: center;
  background-color: var(--text-area-background-color, #fafafa);
  display: flex;
  max-width: 710px;
  padding: 0.75rem 0.5rem 0.5rem 0.5rem;
  width: 100%;

  ion-select {
    --border-color: var(--main-background-accent-color);
    --highlight-color-focused: var(--outline-button-color);
    --highlight-color-valid: var(--outline-button-color);
    max-width: calc(100% - 104px);
    min-height: 3.125rem;
  
    &:hover {
      --border-color: var(--outline-button-color);
    }
  }

  ion-fab {
    position: relative;

    ion-fab-button ion-icon {
      --ionicon-stroke-width: 48px;
    }

    &:first-of-type ion-fab-button {
      margin-left: 12px;
      margin-right: 4px;
    }

    &:last-of-type ion-fab-button {
      margin-right: 0;
    }
  }
}

// Adjust padding and background color of text and facsimile columns in mobile mode
.scroll-content-container.mobile-scc {
  background-color: var(--text-area-background-color, #fafafa);
  display: block;
  height: 100%;
  padding: 12px;
  width: 100%;
}

.select-view-wrapper ~ .scroll-content-container.mobile-scc {
  height: calc(100% - 72px); // full height minus .select-view-wrapper height
  padding-top: 0;
}
